version: '3.8'

services:
  client_benevole:
    image: nginx:latest
    container_name: client_benevole
    depends_on:
      - app_benevole
    volumes:
      - ./client:/usr/share/nginx/html/benevole
    networks:
      - traefik_web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client_benevole.priority=1000"
      - "traefik.http.routers.client_benevole.rule=(Host(`${DNS_NAME}`) || Host(`www.${DNS_NAME}`)) && PathPrefix(`/benevoles/`)"

      - "traefik.http.routers.client_benevole.entrypoints=websecure"
      - "traefik.http.routers.client_benevole.tls=true"
      - "traefik.http.routers.client_benevole.tls.certresolver=myresolver"

  app_benevole:
    image: 'docker-spring-boot-benevole'
    container_name: app_benevole
    build:
      context: ./app
    env_file: .env
    depends_on:
      - db_benevole
    volumes:
      - /home/ubuntu/benevole/:/home/ubuntu/benevole/
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db_benevole:5432/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - MAIL_ADRESSE=${MAIL_ADRESSE}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - SERVER_PORT=8000
    networks:
      - traefik_web
    expose:
      - "8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app_benevole.priority=10000"
      - "traefik.http.routers.app_benevole.rule=(Host(`${DNS_NAME}`) || Host(`www.${DNS_NAME}`)) && PathPrefix(`/benevoles/api/`)"

      - "traefik.http.routers.app_benevole.middlewares=app_benevole-replacepathregex"
      - "traefik.http.middlewares.app_benevole-replacepathregex.replacepathregex.regex=^/benevoles/api/(.*)"
      - "traefik.http.middlewares.app_benevole-replacepathregex.replacepathregex.replacement=/$$1"

      - "traefik.http.routers.app_benevole.entrypoints=websecure"
      - "traefik.http.routers.app_benevole.tls=true"
      - "traefik.http.routers.app_benevole.tls.certresolver=myresolver"

  db_benevole:
    image: postgres:14.1-alpine
    container_name: db_benevole
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:          #supprimer en remote
      - "8106:5432" #supprimer en remote
    volumes:
      - data-volume:/var/lib/postgresql
    networks:
      - traefik_web
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.db_benevole.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.db_benevole.entrypoints=benevole_db"
      - "traefik.tcp.services.db_benevole.loadbalancer.server.port=5432"

volumes:
  data-volume:

networks:
  traefik_web:
    external: true
